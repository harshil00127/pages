var cluster = require('cluster');
var os = require('os');

var WorkerPool = require("./workerpool");
var Local = require("./local");

// Constructor
function Kali () {

  this.numCPUs = os.cpus().length;
  this.maxProcs = this.numCPUs;
};


Kali.prototype.setMaxProcs = function (n) {

  if (n == null) {
    n = this.numCPUs;
  }
  
  return this.maxProcs = n;
};


Kali.prototype.distribute = function (f, options) {

  // maxProcs = maxProcs || this.maxProcs;
  
  if (cluster.isMaster) {
    this.Workers = new WorkerPool(options);
    this.Workers.start();
    
    process.on('SIGINT', this.Workers.end);
    process.on('exit', this.Workers.end);
  }
  else {
    if (typeof this.instructions === "string") {
      return require(this.instructions);
    }
    
    if (typeof this.instructions === "function") {
      return this.instructions();
    }
    
    throw "input to kali.distribute has unexpected type (" + (typeof this.instructions) + "), should be function or string path to require";
  }
};

module.exports = Kali;
module.exports.Local = Local;